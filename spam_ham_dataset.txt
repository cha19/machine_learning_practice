{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":260807,"sourceType":"datasetVersion","datasetId":109196}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-27T01:36:18.682420Z","iopub.execute_input":"2024-08-27T01:36:18.682837Z","iopub.status.idle":"2024-08-27T01:36:19.179421Z","shell.execute_reply.started":"2024-08-27T01:36:18.682795Z","shell.execute_reply":"2024-08-27T01:36:19.178012Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/spam-mails-dataset/spam_ham_dataset.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import string\nimport numpy as np\nimport pandas as pd\n\nimport nltk\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\n\nfrom sklearn.feature_extraction.text import CountVectorizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:38:56.077403Z","iopub.execute_input":"2024-08-27T01:38:56.077872Z","iopub.status.idle":"2024-08-27T01:38:56.259070Z","shell.execute_reply.started":"2024-08-27T01:38:56.077827Z","shell.execute_reply":"2024-08-27T01:38:56.257948Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"nltk.download('stopwords')\n","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:39:10.795885Z","iopub.execute_input":"2024-08-27T01:39:10.796474Z","iopub.status.idle":"2024-08-27T01:39:10.887072Z","shell.execute_reply.started":"2024-08-27T01:39:10.796416Z","shell.execute_reply":"2024-08-27T01:39:10.885691Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n","output_type":"stream"},{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"True"},"metadata":{}}]},{"cell_type":"code","source":"df=pd.read_csv(\"/kaggle/input/spam-mails-dataset/spam_ham_dataset.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:39:57.102190Z","iopub.execute_input":"2024-08-27T01:39:57.102694Z","iopub.status.idle":"2024-08-27T01:39:57.272698Z","shell.execute_reply.started":"2024-08-27T01:39:57.102645Z","shell.execute_reply":"2024-08-27T01:39:57.271415Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"df['text'] = df['text'].apply(lambda x:x.replace('\\r\\n',' '))","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:40:52.669402Z","iopub.execute_input":"2024-08-27T01:40:52.669849Z","iopub.status.idle":"2024-08-27T01:40:52.696629Z","shell.execute_reply.started":"2024-08-27T01:40:52.669808Z","shell.execute_reply":"2024-08-27T01:40:52.694976Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"df.info()   #checking for missing values","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:41:32.591123Z","iopub.execute_input":"2024-08-27T01:41:32.592206Z","iopub.status.idle":"2024-08-27T01:41:32.618436Z","shell.execute_reply.started":"2024-08-27T01:41:32.592151Z","shell.execute_reply":"2024-08-27T01:41:32.617237Z"},"trusted":true},"execution_count":7,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 5171 entries, 0 to 5170\nData columns (total 4 columns):\n #   Column      Non-Null Count  Dtype \n---  ------      --------------  ----- \n 0   Unnamed: 0  5171 non-null   int64 \n 1   label       5171 non-null   object\n 2   text        5171 non-null   object\n 3   label_num   5171 non-null   int64 \ndtypes: int64(2), object(2)\nmemory usage: 161.7+ KB\n","output_type":"stream"}]},{"cell_type":"code","source":"stemmer = PorterStemmer()","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:42:01.999325Z","iopub.execute_input":"2024-08-27T01:42:01.999791Z","iopub.status.idle":"2024-08-27T01:42:02.005198Z","shell.execute_reply.started":"2024-08-27T01:42:01.999750Z","shell.execute_reply":"2024-08-27T01:42:02.003951Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"stemmer.stem('sophistication')","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:42:33.235860Z","iopub.execute_input":"2024-08-27T01:42:33.237019Z","iopub.status.idle":"2024-08-27T01:42:33.244430Z","shell.execute_reply.started":"2024-08-27T01:42:33.236969Z","shell.execute_reply":"2024-08-27T01:42:33.243255Z"},"trusted":true},"execution_count":9,"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"'sophist'"},"metadata":{}}]},{"cell_type":"code","source":"corpus = []\nstopwords_set = set(stopwords.words('english'))\n\nfor i in range(len(df)):\n    text = df['text'].iloc[i].lower()\n    text = text.translate(str.maketrans('','',string.punctuation)).split()\n    text = [stemmer.stem(word) for word in text if word not in stopwords_set]\n    text = ''.join(text)\n    corpus.append(text)","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:45:30.087975Z","iopub.execute_input":"2024-08-27T01:45:30.088618Z","iopub.status.idle":"2024-08-27T01:45:50.429487Z","shell.execute_reply.started":"2024-08-27T01:45:30.088559Z","shell.execute_reply":"2024-08-27T01:45:50.428369Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"vectorizer = CountVectorizer()\n\nX=vectorizer.fit_transform(corpus).toarray()\ny=df.label_num\n\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:48:04.376162Z","iopub.execute_input":"2024-08-27T01:48:04.376618Z","iopub.status.idle":"2024-08-27T01:48:04.636706Z","shell.execute_reply.started":"2024-08-27T01:48:04.376572Z","shell.execute_reply":"2024-08-27T01:48:04.635159Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"clf = RandomForestClassifier(n_jobs=-1)\nclf.fit(X_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:48:39.882419Z","iopub.execute_input":"2024-08-27T01:48:39.882900Z","iopub.status.idle":"2024-08-27T01:49:21.779958Z","shell.execute_reply.started":"2024-08-27T01:48:39.882854Z","shell.execute_reply":"2024-08-27T01:49:21.778725Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"RandomForestClassifier(n_jobs=-1)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(n_jobs=-1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(n_jobs=-1)</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"clf.score(X_test,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:49:21.811685Z","iopub.execute_input":"2024-08-27T01:49:21.812118Z","iopub.status.idle":"2024-08-27T01:49:22.060789Z","shell.execute_reply.started":"2024-08-27T01:49:21.812076Z","shell.execute_reply":"2024-08-27T01:49:22.059665Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"0.7545893719806763"},"metadata":{}}]},{"cell_type":"code","source":"email_to_classify = df.text.values[10]","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:49:52.351140Z","iopub.execute_input":"2024-08-27T01:49:52.351599Z","iopub.status.idle":"2024-08-27T01:49:52.357134Z","shell.execute_reply.started":"2024-08-27T01:49:52.351555Z","shell.execute_reply":"2024-08-27T01:49:52.355889Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"email_text = email_to_classify.lower().translate(str.maketrans('','',string.punctuation)).split()\nemail_text = [stemmer.stem(word) for word in text if word not in stopwords_set]\nemail_text = ' '.join(email_text)\n\nemail_corpus = [email_text]\n\nX_email = vectorizer.transform(email_corpus)","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:52:57.293931Z","iopub.execute_input":"2024-08-27T01:52:57.294385Z","iopub.status.idle":"2024-08-27T01:52:57.302967Z","shell.execute_reply.started":"2024-08-27T01:52:57.294343Z","shell.execute_reply":"2024-08-27T01:52:57.301535Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"clf.predict(X_email)","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:53:10.125183Z","iopub.execute_input":"2024-08-27T01:53:10.125664Z","iopub.status.idle":"2024-08-27T01:53:10.172058Z","shell.execute_reply.started":"2024-08-27T01:53:10.125621Z","shell.execute_reply":"2024-08-27T01:53:10.170816Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"array([0])"},"metadata":{}}]},{"cell_type":"code","source":"df.label_num.iloc[10]","metadata":{"execution":{"iopub.status.busy":"2024-08-27T01:53:25.279379Z","iopub.execute_input":"2024-08-27T01:53:25.279871Z","iopub.status.idle":"2024-08-27T01:53:25.288474Z","shell.execute_reply.started":"2024-08-27T01:53:25.279825Z","shell.execute_reply":"2024-08-27T01:53:25.287250Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"1"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}