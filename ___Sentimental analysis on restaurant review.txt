{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9235491,"sourceType":"datasetVersion","datasetId":5586237}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"#source = https://www.youtube.com/watch?v=zwR6M5zpnWs","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.570795Z","iopub.execute_input":"2024-08-24T00:11:40.571396Z","iopub.status.idle":"2024-08-24T00:11:40.577947Z","shell.execute_reply.started":"2024-08-24T00:11:40.571345Z","shell.execute_reply":"2024-08-24T00:11:40.576526Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.580895Z","iopub.execute_input":"2024-08-24T00:11:40.581444Z","iopub.status.idle":"2024-08-24T00:11:40.592728Z","shell.execute_reply.started":"2024-08-24T00:11:40.581400Z","shell.execute_reply":"2024-08-24T00:11:40.590974Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"dataset = pd.read_csv(\"/kaggle/input/restaurant-reviews/a1_RestaurantReviews_HistoricDump.tsv\", delimiter='\\t',quoting = 3)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.594485Z","iopub.execute_input":"2024-08-24T00:11:40.594935Z","iopub.status.idle":"2024-08-24T00:11:40.612475Z","shell.execute_reply.started":"2024-08-24T00:11:40.594890Z","shell.execute_reply":"2024-08-24T00:11:40.610732Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"dataset.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.614545Z","iopub.execute_input":"2024-08-24T00:11:40.615051Z","iopub.status.idle":"2024-08-24T00:11:40.623591Z","shell.execute_reply.started":"2024-08-24T00:11:40.615010Z","shell.execute_reply":"2024-08-24T00:11:40.622340Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"(900, 2)"},"metadata":{}}]},{"cell_type":"code","source":"dataset.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.626162Z","iopub.execute_input":"2024-08-24T00:11:40.626515Z","iopub.status.idle":"2024-08-24T00:11:40.643231Z","shell.execute_reply.started":"2024-08-24T00:11:40.626479Z","shell.execute_reply":"2024-08-24T00:11:40.641668Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"                                              Review  Liked\n0                           Wow... Loved this place.      1\n1                                 Crust is not good.      0\n2          Not tasty and the texture was just nasty.      0\n3  Stopped by during the late May bank holiday of...      1\n4  The selection on the menu was great and so wer...      1","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Review</th>\n      <th>Liked</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Wow... Loved this place.</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Crust is not good.</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Not tasty and the texture was just nasty.</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Stopped by during the late May bank holiday of...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>The selection on the menu was great and so wer...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import re      #regular expressions\nimport nltk    #natural language toolkit\n\nnltk.download('stopwords')\n\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\n\nps= PorterStemmer()\n\nall_stopwords=stopwords.words('english')\nall_stopwords.remove('not')","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.644919Z","iopub.execute_input":"2024-08-24T00:11:40.645296Z","iopub.status.idle":"2024-08-24T00:11:40.657143Z","shell.execute_reply.started":"2024-08-24T00:11:40.645246Z","shell.execute_reply":"2024-08-24T00:11:40.655809Z"},"trusted":true},"execution_count":37,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n","output_type":"stream"}]},{"cell_type":"markdown","source":"here we are storing the stopword in a variable named all_stopwords\nthis package has many language so we are using only english language","metadata":{}},{"cell_type":"code","source":"all_stopwords[:5]\n","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.658957Z","iopub.execute_input":"2024-08-24T00:11:40.659479Z","iopub.status.idle":"2024-08-24T00:11:40.673941Z","shell.execute_reply.started":"2024-08-24T00:11:40.659425Z","shell.execute_reply":"2024-08-24T00:11:40.672505Z"},"trusted":true},"execution_count":38,"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"['i', 'me', 'my', 'myself', 'we']"},"metadata":{}}]},{"cell_type":"markdown","source":"clean our data \nfrom our 900 customers data\nwe are iterating all the 900 customers review, then we are going to clean all the special characters \nand then we are lower the case so it wont consider as a differnet word while doing stemming and lematiation\nthen we are going to drop the word which is not in stopword","metadata":{}},{"cell_type":"code","source":"corpus =[]\n\nfor i in range(0,900):\n    review = re.sub('[^a-zA-z]',' ',dataset['Review'][i])\n    review =review.lower()\n    review = review.split()\n    review = [ps.stem(word) for word in review if not word in set(all_stopwords)]\n    review = ' '.join(review)\n    corpus.append(review)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.675700Z","iopub.execute_input":"2024-08-24T00:11:40.676138Z","iopub.status.idle":"2024-08-24T00:11:40.965454Z","shell.execute_reply.started":"2024-08-24T00:11:40.676100Z","shell.execute_reply":"2024-08-24T00:11:40.964074Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"corpus[:5]","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.967144Z","iopub.execute_input":"2024-08-24T00:11:40.967565Z","iopub.status.idle":"2024-08-24T00:11:40.976686Z","shell.execute_reply.started":"2024-08-24T00:11:40.967519Z","shell.execute_reply":"2024-08-24T00:11:40.975374Z"},"trusted":true},"execution_count":40,"outputs":[{"execution_count":40,"output_type":"execute_result","data":{"text/plain":"['wow love place',\n 'crust not good',\n 'not tasti textur nasti',\n 'stop late may bank holiday rick steve recommend love',\n 'select menu great price']"},"metadata":{}}]},{"cell_type":"markdown","source":"Data Transformation\n\nusin gthe bag of word apporch and we are taking only the most frequenet 1420 word and drop the rest of it.","metadata":{}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import CountVectorizer\ncv = CountVectorizer(max_features=1420)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.978577Z","iopub.execute_input":"2024-08-24T00:11:40.979134Z","iopub.status.idle":"2024-08-24T00:11:40.987636Z","shell.execute_reply.started":"2024-08-24T00:11:40.979077Z","shell.execute_reply":"2024-08-24T00:11:40.986259Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"X = cv.fit_transform(corpus).toarray()\ny=dataset.iloc[:,-1].values","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:40.989565Z","iopub.execute_input":"2024-08-24T00:11:40.990048Z","iopub.status.idle":"2024-08-24T00:11:41.018836Z","shell.execute_reply.started":"2024-08-24T00:11:40.989997Z","shell.execute_reply":"2024-08-24T00:11:41.017176Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"\nimport pickle\nbow_path = 'c1_BoW_Sentiment_Model.pkl'\npickle.dump(cv, open(bow_path, \"wb\"), pickle.HIGHEST_PROTOCOL)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:14:22.914115Z","iopub.execute_input":"2024-08-24T00:14:22.914699Z","iopub.status.idle":"2024-08-24T00:14:22.929167Z","shell.execute_reply.started":"2024-08-24T00:14:22.914636Z","shell.execute_reply":"2024-08-24T00:14:22.927719Z"},"trusted":true},"execution_count":53,"outputs":[]},{"cell_type":"markdown","source":"Dividing the data into train and test split","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx_train, x_test, y_train, y_test = train_test_split(X,y, test_size = 0.20, random_state=0)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.038384Z","iopub.execute_input":"2024-08-24T00:11:41.038836Z","iopub.status.idle":"2024-08-24T00:11:41.056089Z","shell.execute_reply.started":"2024-08-24T00:11:41.038796Z","shell.execute_reply":"2024-08-24T00:11:41.054549Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"markdown","source":"Naviebayes classifier","metadata":{}},{"cell_type":"code","source":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(x_train,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.057855Z","iopub.execute_input":"2024-08-24T00:11:41.058312Z","iopub.status.idle":"2024-08-24T00:11:41.093476Z","shell.execute_reply.started":"2024-08-24T00:11:41.058267Z","shell.execute_reply":"2024-08-24T00:11:41.092105Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"GaussianNB()","text/html":"<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"import joblib\njoblib.dump(classifier, \"/kaggle/working/c1_BoW_Sentiment_Model.pkl\")","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.095337Z","iopub.execute_input":"2024-08-24T00:11:41.095764Z","iopub.status.idle":"2024-08-24T00:11:41.107665Z","shell.execute_reply.started":"2024-08-24T00:11:41.095722Z","shell.execute_reply":"2024-08-24T00:11:41.106127Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"['/kaggle/working/c1_BoW_Sentiment_Model.pkl']"},"metadata":{}}]},{"cell_type":"markdown","source":"model Performance","metadata":{}},{"cell_type":"code","source":"y_pred = classifier.predict(x_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test,y_pred)\nprint(cm)\n\n\naccuracy_score(y_test,y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.109835Z","iopub.execute_input":"2024-08-24T00:11:41.110500Z","iopub.status.idle":"2024-08-24T00:11:41.129063Z","shell.execute_reply.started":"2024-08-24T00:11:41.110440Z","shell.execute_reply":"2024-08-24T00:11:41.127679Z"},"trusted":true},"execution_count":47,"outputs":[{"name":"stdout","text":"[[67 11]\n [38 64]]\n","output_type":"stream"},{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"0.7277777777777777"},"metadata":{}}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"dataset = pd.read_csv('/kaggle/input/restaurant-reviews/a2_RestaurantReviews_FreshDump.tsv', delimiter = '\\t', quoting = 3)\ndataset.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.130567Z","iopub.execute_input":"2024-08-24T00:11:41.130998Z","iopub.status.idle":"2024-08-24T00:11:41.147095Z","shell.execute_reply.started":"2024-08-24T00:11:41.130956Z","shell.execute_reply":"2024-08-24T00:11:41.145713Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"                                              Review\n0                        Spend your money elsewhere.\n1  Their regular toasted bread was equally satisf...\n2  The Buffet at Bellagio was far from what I ant...\n3                   And the drinks are WEAK, people!\n4                         -My order was not correct.","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Review</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Spend your money elsewhere.</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Their regular toasted bread was equally satisf...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>The Buffet at Bellagio was far from what I ant...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>And the drinks are WEAK, people!</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>-My order was not correct.</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import re\nimport nltk\n\nnltk.download('stopwords')\n\nfrom nltk.corpus import stopwords\nfrom nltk.stem.porter import PorterStemmer\nps = PorterStemmer()\n\nall_stopwords = stopwords.words('english')\nall_stopwords.remove('not')","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.149346Z","iopub.execute_input":"2024-08-24T00:11:41.149965Z","iopub.status.idle":"2024-08-24T00:11:41.161034Z","shell.execute_reply.started":"2024-08-24T00:11:41.149909Z","shell.execute_reply":"2024-08-24T00:11:41.159493Z"},"trusted":true},"execution_count":49,"outputs":[{"name":"stdout","text":"[nltk_data] Downloading package stopwords to /usr/share/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n","output_type":"stream"}]},{"cell_type":"code","source":"corpus=[]\n\nfor i in range(0, 100):\n  review = re.sub('[^a-zA-Z]', ' ', dataset['Review'][i])\n  review = review.lower()\n  review = review.split()\n  review = [ps.stem(word) for word in review if not word in set(all_stopwords)]\n  review = ' '.join(review)\n  corpus.append(review)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:11:41.163159Z","iopub.execute_input":"2024-08-24T00:11:41.164048Z","iopub.status.idle":"2024-08-24T00:11:41.209020Z","shell.execute_reply.started":"2024-08-24T00:11:41.163971Z","shell.execute_reply":"2024-08-24T00:11:41.207507Z"},"trusted":true},"execution_count":50,"outputs":[]},{"cell_type":"markdown","source":"using the same model for prediction","metadata":{}},{"cell_type":"code","source":"import pickle\ncvFile='/kaggle/working/c1_BoW_Sentiment_Model.pkl'\ncv = pickle.load(open(cvFile, \"rb\"))\n","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:14:31.401328Z","iopub.execute_input":"2024-08-24T00:14:31.401865Z","iopub.status.idle":"2024-08-24T00:14:31.411082Z","shell.execute_reply.started":"2024-08-24T00:14:31.401817Z","shell.execute_reply":"2024-08-24T00:14:31.409653Z"},"trusted":true},"execution_count":54,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:14:47.087763Z","iopub.execute_input":"2024-08-24T00:14:47.088305Z","iopub.status.idle":"2024-08-24T00:14:47.100451Z","shell.execute_reply.started":"2024-08-24T00:14:47.088257Z","shell.execute_reply":"2024-08-24T00:14:47.098670Z"},"trusted":true},"execution_count":55,"outputs":[]},{"cell_type":"code","source":"from sklearn.naive_bayes import GaussianNB\nclassifier = GaussianNB()\nclassifier.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:14:53.653378Z","iopub.execute_input":"2024-08-24T00:14:53.653836Z","iopub.status.idle":"2024-08-24T00:14:53.682526Z","shell.execute_reply.started":"2024-08-24T00:14:53.653795Z","shell.execute_reply":"2024-08-24T00:14:53.681059Z"},"trusted":true},"execution_count":56,"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"GaussianNB()","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"code","source":"\nimport joblib\njoblib.dump(classifier, 'c2_Classifier_Sentiment_Model') ","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:15:04.359454Z","iopub.execute_input":"2024-08-24T00:15:04.359921Z","iopub.status.idle":"2024-08-24T00:15:04.370932Z","shell.execute_reply.started":"2024-08-24T00:15:04.359878Z","shell.execute_reply":"2024-08-24T00:15:04.369695Z"},"trusted":true},"execution_count":57,"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"['c2_Classifier_Sentiment_Model']"},"metadata":{}}]},{"cell_type":"code","source":"y_pred = classifier.predict(X_test)\n\nfrom sklearn.metrics import confusion_matrix, accuracy_score\ncm = confusion_matrix(y_test, y_pred)\nprint(cm)\n\naccuracy_score(y_test, y_pred)","metadata":{"execution":{"iopub.status.busy":"2024-08-24T00:15:16.223948Z","iopub.execute_input":"2024-08-24T00:15:16.224370Z","iopub.status.idle":"2024-08-24T00:15:16.242536Z","shell.execute_reply.started":"2024-08-24T00:15:16.224332Z","shell.execute_reply":"2024-08-24T00:15:16.240962Z"},"trusted":true},"execution_count":58,"outputs":[{"name":"stdout","text":"[[67 11]\n [38 64]]\n","output_type":"stream"},{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"0.7277777777777777"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}